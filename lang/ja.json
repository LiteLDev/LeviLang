{
  "ll": {
    "main": {
      "checkRunningBDS": {
        "detected": "同じパスを持つ他のBDSプロセスを検出しました。",
        "tip": "ネットワークポートとレベルが占有される可能性があります",
        "ask": "PID {} のプロセスを終了しますか? (y=はい, n=いいえ)"
      },
      "fixAllowList": {
        "removeEmptyAllowlist": "allowlist.json は空です。 削除中...",
        "checkManually": "allowlist.json と whitelist.json の両方が存在しています。手動で確認してください。",
        "renamed": "whitelist.jsonの名前をallowlist.jsonに変更しました"
      },
      "warning": {
        "betaVersion": "現在使用しているのはベータ版です",
        "productionEnv": "本番環境で使用しないでください。",
        "protocolVersionNotMatch": {
          "1": "プロトコルバージョンが一致しません。ターゲットバージョン: {}、現在のバージョン: {}。",
          "2": "サーバーがクラッシュする可能性があります。BDS バージョンに一致する LiteLoader を使用してください。"
        },
        "inDebugMode": "現在開発モードです。"
      },
      "bstats": {
        "enabled": "bStats が有効になっています。プラグイン/bStats/config.json を編集して無効にできます。"
      },
      "unpackResources": {
        "begin": "LiteLoaderBDSランタイムリソースを展開しています。しばらくお待ちください...",
        "end": "Unpacked."
      }
    },
    "antiAbnormalItem": {
      "detected": "プレイヤー({}) のアイテムデータエラー",
      "itemInfo": "アイテム: {}"
    },
    "cmd": {
      "tpdim": {
        "success": "{} を {} ({:2f}, {:2f}, {:2f}) にテレポートしました",
        "error": {
          "noActorTeleported": "エンティティはテレポートされませんでした",
          "noActorSpecified": "エンティティが指定されていません"
        },
        "invalidDimid": "無効な値です: {}"
      },
      "listPlugin": {
        "overview": "プラグインの一覧 [{}]",
        "tip": "* 詳細については、コマンド \"ll list <Plugin Name>\" を使用してください"
      },
      "pluginInfo": {
        "title": "プラグイン <{}>",
        "error": {
          "pluginNotFound": "プラグイン <{}> が見つかりません。"
        }
      },
      "version": {
        "msg": "統合版マルチプレイサーバー {}\n- with LiteLoaderBDS {}\n- ネットワークプロトコル: {}"
      },
      "help": {
        "msg": "[説明]\nLiteLoaderBDSは、Bedrock Dedicated Serverのための非公式プラグインローダーです。\n膨大な数のAPIやイベントシステム、多数の実用的なインターフェイスを提供しています。\n[Github]\n--> https://github.com/LiteLDev/LiteLoaderBDS <--\nより詳しい情報を得るために、LiteLoaderBDSのGitHubをご覧ください。"
      },
      "loadPlugin": {
        "success": "プラグイン <{}> が読み込まれました。",
        "fail": "プラグイン {} の読み込みに失敗しました"
      },
      "unloadPlugin": {
        "success": "プラグイン <{}> がアンロードされました。",
        "fail": "プラグイン <{}> のアンロードに失敗しました"
      },
      "reloadPlugin": {
        "success": "プラグイン <{}> がリロードされました",
        "fail": "プラグイン <{}> のリロードに失敗しました"
      },
      "reloadAllPlugins": {
        "success": "{} 個のプラグインが正常にリロードされました",
        "fail": "プラグインのリロードに失敗しました"
      },
      "settings": {
        "set": {
          "success": "設定は正常に{}に設定されました。"
        },
        "get": {
          "success": "設定の {} の取得に成功しました。 値: "
        },
        "delete": {
          "success": "設定の {} の削除に成功しました。",
          "error": {
            "emptyKey": "JsonPointer を空にすることはできません！"
          }
        },
        "reload": {
          "success": "設定が正常に再読み込みされました。"
        },
        "save": {
          "success": "設定は正常に保存されました。"
        },
        "list": {
          "success": "設定リスト:"
        }
      },
      "error": {
        "noPathSpecified": "LiteLoader プラグインの有効なパスを指定してください。",
        "noNameSpecified": "LiteLoader プラグインの有効な名前を入力してください。"
      }
    },
    "config": {
      "creating": "LL Config File <{}> が見つかりません。 設定ファイルを作成しています...",
      "warning": {
        "configOutdated": "古いバージョンのLL Config File <{}>を使用しています。"
      },
      "updating": "設定ファイルを更新しています..."
    },
    "crashLogger": {
      "existsingDebuggerDetected": "既存のデバッガが検出されました。内蔵のCrashLoggerは動作しません。",
      "wineDetected": "Wine環境が検出されました。内蔵のCrashLoggerは動作しません。",
      "error": {
        "cannotCreateDaemonProcess": "CrashLogger Daemon Processを作成できませんでした。"
      },
      "warning": {
        "crashLoggerDisabled": {
          "1": "内臓のCrashLoggerが無効になっています。",
          "2": "未処理の例外が発生した場合、クラッシュログは作成されません。",
          "3": "クラッシュの原因を突き止めることはほとんど不可能です。",
          "4": "サーバーの安定性を保証するために有効にすることを強くお勧めします"
        },
        "conflicts": {
          "1": "プラグイン <{}> が競合しているため、内臓のCrashLoggerが有効になっていません",
          "2": "未処理の例外が発生した場合、クラッシュログは作成されません。",
          "3": "クラッシュの原因と衝突の原因を調べられません",
          "4": "CrashLoggerはサーバーの安定性を保証する重要なコンポーネントです。",
          "5": "プラグイン<{}>の修正をお勧めします"
        }
      },
      "init": {
        "fail": {
          "msg": "組み込みのCrashLoggerの起動に失敗しました！",
          "tip": "未処理の例外が発生した場合、クラッシュログは生成されません。"
        }
      }
    },
    "addonsHelper": {
      "error": {
        "addonConfigNotFound": "アドオンの設定が見つかりません。",
        "addonFileNotFound": "アドオンファイル \"{}\" が見つかりません。",
        "addonNotFound": "アドオン <{}> が見つかりません。",
        "outOfRange": "Addonの索引 {} が範囲外です",
        "unsupportedFileType": "サポートされていない種類のファイルが見つかりました。",
        "parsingEnabledAddonsList": "有効なアドオンリストの解析中にエラーが発生しました",
        "noAddonInstalled": "アドオンがインストールされていません。",
        "installationAborted": "インストールが中止されました。"
      },
      "displayError": "エラー: {}",
      "removeAddonFromList": {
        "fail": "設定ファイルからアドオン<{}>を削除できませんでした。",
        "success": "設定ファイルからアドオン<{}>を削除しました。"
      },
      "addAddonToList": {
        "invalidList": "無効なアドオンリストファイル {} は {} にバックアップし、アドオンリストをデフォルトにリセットしました",
        "fail": "アドオン {} を {} に登録できませんでした。",
        "success": "設定ファイルに addon <{}> を追加しました。"
      },
      "install": {
        "installing": "アドオン <{}> をインストール中...",
        "error": {
          "failToUncompress": {
            "msg": "アドオン {} の解凍に失敗しました",
            "exitCode": "終了コード: {}",
            "programOutput": "プログラム出力:\n{}"
          }
        }
      },
      "uninstall": {
        "success": "アドオン <{}> がアンインストールされました。"
      },
      "autoInstall": {
        "tip": {
          "dirCreated": "ディレクトリが作成されました。圧縮されたアドオンファイルを {} に移動して、次回起動時にインストールすることができます。"
        },
        "working": "{} 件の新しいアドオンがインストールされました。処理中です...",
        "installed": "アドオン{} がインストールされました。",
        "installedCount": "{} アドオンがインストールされました。"
      },
      "cmd": {
        "output": {
          "list": {
            "overview": "アドオン: {} アドオンがインストールされました:"
          }
        }
      }
    },
    "loader": {
      "loadScriptEngine": {
        "error": {
          "versionNotMatch": "{} の Script Engine のファイル バージョン <{}> が LiteLoader のバージョン <{}> と一致しません"
        },
        "success": "* {} の ScriptEngine を読み込みました"
      },
      "loadDotNetEngine": {
        "error": {
          "versionNotMatch": "LiteLoader.NETのファイルバージョン<{}>がLiteLoaderのバージョン<{}>と一致しません"
        },
        "success": "* .NET エンジンが読み込まれました"
      },
      "loadMain": {
        "loadingPlugins": "プラグインを読み込み中...",
        "loadedShellLink": "シェルリンクされたプラグイン <{} => {}> 読み込みました",
        "loadedPlugin": "プラグイン <{name}> がリロードされました",
        "done": "{} 個のネイティブプラグインがロードされました。",
        "start": "ネイティブプラグインを読み込み中..."
      },
      "initNodeJsDirectories": {
        "created": "NodeJs ランタイムファイルが見つかりませんでした。"
      },
      "initPythonDirectories": {
        "created": "Python runtime directory no found, created."
      }
    },
    "notice": {
      "newForum": "新しいフォーラムです-> {}",
      "license": "LiteLoader は {} の下でライセンスされています。",
      "translateText": "LLの文章の翻訳と改善にご協力ください -> {}"
    },
    "pluginManager": {
      "error": {
        "invalidFileType": "{} の無効なプラグインファイルの種類 {}",
        "noValidPluginFound": "{} で有効なプラグインが見つかりませんでした。",
        "failToRegisterPlugin": "プラグイン <{}> の登録に失敗しました",
        "hasBeenRegistered": "{} が登録されました",
        "failToLoadPlugin": "プラグイン{} の読み込みに失敗しました。",
        "pluginNotFound": "プラグイン <{}> が見つかりません"
      },
      "warning": {
        "unloadDllNotFinished": "DLLプラグインの関数のアンロードが終了していません。",
        "reloadDllNotFinished": "Dllプラグインの機能の再読み込みが完了していません。"
      },
      "reloadPlugin": {
        "fail": "プラグイン {} の読み込みに失敗しました"
      }
    },
    "unzipNodeModules": {
      "fail": "node_modules.tarの解凍に失敗しました。"
    },
    "unzipPythonModules": {
      "fail": "python-env.zipの解凍に失敗しました"
    }
  },
  "config": {
    "metadata": {
      "empty": "Config metadata is empty!"
    },
    "save": {
      "fail": "設定ファイルの保存(作成) に失敗しました。"
    }
  }
}