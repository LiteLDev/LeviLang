{
    "crash the server": "crash the server",
    "Query memory status": "Query memory status",
    "Not an actor origin": "Not an actor origin",
    "fail to convert position between dimensions": "fail to convert position between dimensions",
    "Teleported {} to {} {}": "Teleported {} to {} {}",
    "No target": "No target",
    "Query serverversion information": "Query serverversion information",
    "This server is running Bedrock Dedicated Server version {0} with §bLeviLamina-{1}§r.": "This server is running Bedrock Dedicated Server version {0} with §bLeviLamina-{1}§r.",
    "LeviConfig rewrite successfully": "LeviConfig rewrite successfully",
    "LeviConfig rewrite failed": "LeviConfig rewrite failed",
    "LeviConfig load failed": "LeviConfig load failed",
    "LeviConfig failed to save": "LeviConfig failed to save",
    "Debugger detected, CrashLogger will not be enabled": "Debugger detected, CrashLogger will not be enabled",
    "Couldn't Create CrashLogger Daemon Process": "Couldn't Create CrashLogger Daemon Process",
    "CrashLogger enabled successfully": "CrashLogger enabled successfully",
    "Detected the existence of another BDS process with the same path!": "檢測到另一個具有相同路徑的BDS進程！",
    "This may cause the network port and the level to be occupied": "檢測到另一個具有相同路徑的BDS進程！",
    "Do you want to terminate the process with PID {}?  (y=Yes, n=No, e=Exit)": "是否要終止PID為 {} 的進程？ （y=是，n=否）",
    "LeviLamina is a free software licensed under {}": "LeviLamina is a free software licensed under {}",
    "Help us translate & improve text -> {}": "Help us translate & improve text -> {}",
    "Protocol version not match, target version: {}, current version: {}": "Protocol version not match, target version: {}, current version: {}",
    "This will most likely crash the server, please use the LeviLamina that matches the BDS version!": "This will most likely crash the server, please use the LeviLamina that matches the BDS version!",
    "LeviLamina is running in DEBUG mode!": "LeviLamina is running in DEBUG mode!",
    "Plugin name {} do not match folder {}": "Plugin name {} do not match folder {}",
    "Loading plugins...": "載入插件中...",
    "Failed to create native plugin manager": "Failed to create native plugin manager",
    "Failed to load manifest for {}": "Failed to load manifest for {}",
    "Missing dependency {}": "Missing dependency {}",
    "The dependencies of {} are missing, will not be loaded": "The dependencies of {} are missing, will not be loaded",
    "{} conflicts with {}": "{} conflicts with {}",
    "The dependencies of {} are in conflict, will not be loaded": "The dependencies of {} are in conflict, will not be loaded",
    "The dependencies of {} are in loops, will not be loaded": "The dependencies of {} are in loops, will not be loaded",
    "The dependencies of {} is not loaded, will not be loaded": "The dependencies of {} is not loaded, will not be loaded",
    "{} loaded": "{} loaded",
    "Failed to load {}": "Failed to load {}",
    "{} plugin(s) loaded": "{} plugin(s) loaded",
    "Failed to enable {}": "Failed to enable {}",
    "{} plugin(s) enabled in ({:.1f}s)": "{} plugin(s) enabled in ({:.1f}s)",
    "Failed to load manifest {}": "Failed to load manifest {}",
    "{} is still dependent on {}": "{} is still dependent on {}",
    "Dependency {} of {} is not enabled": "Dependency {} of {} is not enabled",
    "Thanks to RhyMC(rhymc": {
        "com) for the support": "Thanks to RhyMC(rhymc.com) for the support"
    }
}
